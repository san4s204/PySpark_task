import sys
from pyspark.sql import SparkSession
from product_category_view import build_product_category_view
import tempfile, os, sys

def main() -> None:
    """–°–æ–∑–¥–∞—ë–º –ø—Ä–∏–º–µ—Ä—ã –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–æ–≤ –∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É build_product_category_view."""
    spark = (
    SparkSession.builder
    .appName("Product-Category demo")
    .master("local[1]")                                # –æ–¥–∏–Ω –ø–æ—Ç–æ–∫ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ
    # üëâ –≥–æ–≤–æ—Ä–∏–º Spark'—É, –∫–∞–∫–æ–π Python –±—Ä–∞—Ç—å
    .config("spark.pyspark.python", sys.executable)
    .config("spark.pyspark.driver.python", sys.executable)
    # üëâ —Å–ª—É—à–∞–µ–º —Ç–æ–ª—å–∫–æ 127.0.0.1, —á—Ç–æ–±—ã –Ω–µ –ª–µ–∑ –≤ IPv6/–≤–Ω–µ—à–Ω–∏–µ IP
    .config("spark.eventLog.dir",    "file:///C:/tmp/spark-events")
    .config("spark.driver.bindAddress", "127.0.0.1")
    .config("spark.driver.host",       "127.0.0.1")
    .getOrCreate()
)

    # ---------------------------
    # 1. –ò–≥—Ä—É—à–µ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    # ---------------------------
    products_data = [
        (1, "–®–∞–º–ø—É–Ω—å"),
        (2, "–•–ª–µ–±"),
        (3, "–ú–æ–ª–æ–∫–æ"),  # –±–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    ]
    categories_data = [
        (10, "–ö–æ—Å–º–µ—Ç–∏–∫–∞"),
        (11, "–£—Ö–æ–¥ –∑–∞ –≤–æ–ª–æ—Å–∞–º–∏"),
        (12, "–í—ã–ø–µ—á–∫–∞"),
    ]
    product_categories_data = [
        (1, 10),
        (1, 11),
        (2, 12),
        # —É –ø—Ä–æ–¥—É–∫—Ç–∞ 3 —Å–≤—è–∑–µ–π –Ω–µ—Ç
    ]

    products_df = spark.createDataFrame(products_data, ["product_id", "product_name"])
    categories_df = spark.createDataFrame(categories_data, ["category_id", "category_name"])
    product_categories_df = spark.createDataFrame(
        product_categories_data, ["product_id", "category_id"]
    )

    # ---------------------------
    # 2. –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
    # ---------------------------
    result_df = build_product_category_view(
        products_df, categories_df, product_categories_df
    )

    # ---------------------------
    # 3. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    # ---------------------------
    result_df.show(truncate=False)

    # ---------------------------
    # 4. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Spark
    # ---------------------------
    spark.stop()


if __name__ == "__main__":
    print("TEMP =", tempfile.gettempdir())
    main()
    